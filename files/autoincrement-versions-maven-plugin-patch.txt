Index: pom.xml
===================================================================
--- pom.xml	(revision 15873)
+++ pom.xml	(working copy)
@@ -158,6 +158,11 @@
       <version>1.4</version>
     </dependency>
     <dependency>
+      <groupId>org.apache.maven.release</groupId>
+      <artifactId>maven-release-manager</artifactId>
+      <version>${mavenVersion}</version>
+    </dependency>
+    <dependency>
       <groupId>org.apache.maven.wagon</groupId>
       <artifactId>wagon-provider-api</artifactId>
       <version>${wagonVersion}</version>
Index: src/main/java/org/codehaus/mojo/versions/SetMojo.java
===================================================================
--- src/main/java/org/codehaus/mojo/versions/SetMojo.java	(revision 15873)
+++ src/main/java/org/codehaus/mojo/versions/SetMojo.java	(working copy)
@@ -25,6 +25,9 @@
 import org.apache.maven.plugin.MojoExecutionException;
 import org.apache.maven.plugin.MojoFailureException;
 import org.apache.maven.project.MavenProject;
+import org.apache.maven.shared.release.versions.DefaultVersionInfo;
+import org.apache.maven.shared.release.versions.VersionInfo;
+import org.apache.maven.shared.release.versions.VersionParseException;
 import org.codehaus.mojo.versions.api.PomHelper;
 import org.codehaus.mojo.versions.change.VersionChange;
 import org.codehaus.mojo.versions.change.VersionChanger;
@@ -140,6 +143,14 @@
      * @component
      */
     private Prompter prompter;
+    
+    /**
+     * Whether to automatically increment the old version. If not set will default to false.
+     *
+     * @parameter expression="${autoIncrementVersion}" default-value="false"
+     * @since 2.0
+     */
+    private boolean autoIncrementVersion;
 
     /**
      * The changes to module coordinates. Guarded by this.
@@ -174,7 +185,18 @@
         {
             throw new MojoExecutionException( "Project version is inherited from parent." );
         }
-
+        
+        if ( autoIncrementVersion )
+        {
+        	try
+        	{
+				newVersion = incrementVersion(oldVersion);
+			} catch (VersionParseException e)
+			{
+				throw new MojoExecutionException( e.getMessage(), e );
+			}
+        }
+        
         if ( StringUtils.isEmpty( newVersion ) )
         {
             if ( settings.isInteractiveMode() )
@@ -339,6 +361,23 @@
     }
 
     /**
+     * Increment the version number.
+     * 
+     * @param version
+     * @return
+     * @throws VersionParseException 
+     */
+    private String incrementVersion(String version) throws VersionParseException {
+    	VersionInfo versionInfo = new DefaultVersionInfo(version);
+    	
+    	if (versionInfo.isSnapshot()) {
+    		return versionInfo.getNextVersion().getSnapshotVersionString();
+    	} else {
+    		return versionInfo.getNextVersion().getReleaseVersionString();
+    	}
+	}
+
+	/**
      * Updates the pom file.
      *
      * @param pom The pom file to update.
